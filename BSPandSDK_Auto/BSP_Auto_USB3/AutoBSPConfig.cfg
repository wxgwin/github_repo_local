[global]

[platform]

# Target type , [libra2/librasd is available]
target_type = libra2
#target_type = librasd

[serial]

# Serial port
serial_port = /dev/ttyUSB3

# Serial baudrate
baudrate = 115200
xonxoff = 0

# Serial read operation timeout, tool will stop reading any info from serial once
#timeout is over.
timeout = 5

#reboot_delay = 10

# Tool will sleep ${reboot_delay} seconds when target is rebooted
reboot_delay = 28

[connection]
reboot_switch = yes

# Tool will attempt connect indicated serial port ${conn_times} times till 
#success or failure

conn_times = 5

[prompt]
# Bootloader prompt
bl_prompt = Libra>

# TestShell prompt
#ts_prompt = ###>
ts_prompt = sh-4.2#

# Linux shell prompt
lx_prompt = /.*#

[test_case]
# Test case will be executed ${df_exec_times}
df_exec_times = 1

# Specify executed module[s] to run thru this parameter, note: comma as the delimiter
#execution_module = VIDEO,AUDIO

# Specify priority cases to run thru this parameter, note: comma as the delimiter
#execution_priority = H,M,L


# M: test case info and report will be sorted thru module name, then priority
# P: test case info and report will be sorted thru priority, then module name
# N: test case info and report will be sorted thru test case id, then module name
sorted_keyword = M

# If set ignore_failed_case = no, tool will ignore failed case and continue to run
#the rest case , or once tool met failed case, it will end current case
ignore_failed_case = no

# If setting this option, tool will run the failed case ${failed_case_exec_times} times again
failed_case_exec_times = 0

#If set reboot_during_case = yes, tool will reboot after finishing one test case
#or , target will not reboot until met failed case.
reboot_during_case = no

#If assign number to this variable, one case must be finished during this time, or, tool will terminal this case and mark failure.
#The number is in seconds, default value is 3 seconds
max_execute_time = 600

[loadfile]
# The load file operation will be executed 5 times due to loading file operation
# is not stable.

load_nfs_server = 192.168.1.99

# Bootloader file name
#load_bootloader = bootloader_for_lium

# Kernel file name
# Note : kernel file must be copied to path ${load_nfs_server}:/home/bjrd/devel/
load_kernel = auto.zImage.libra2_dvt_BGA_ubifs_ddr256M_dual

# Rootfs file name
# Note : rootfs file must be copied to  ${load_nfs_server}:/nfsroot/automation_rootfs_libra2_hardfs_256Mdul
load_rootfs = rootfs_test.tar.gz

[svn_info]
svn_server = 10.209.156.46
#svn_server = 192.168.1.99
svn_user = lium
svn_passwd = Avl1108eric
#svn_code_version = 1234
linux_user = lium
linux_passwd = Avl1108
svn_path = http://trac/svn/avl_soc/platform/test_automation/QA_BSP_automation/test_shell
svn_rel_path = ./

[mail_pool]
# If setting this option, tool will send test result to mail addr after finishing test
#mail_list = min.liu@availink.com,sean.xu@availink.com,XiaoFeng.Zhao@availink.com,JianLin.Liu@availink.com,QiuLing.Chen@availink.com,HongLing.Li@availink.com,GuangHui.Li@availink.com,Ping.Liu@availink.com
mail_list = min.liu@availink.com

[log_info]
tl_auto_sys_logPath = C:\BSPAT_sys_log.txt
tl_auto_case_logFd = C:\TL_AUTO\CASE_LOG
